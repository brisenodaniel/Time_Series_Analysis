pwd()
getwd()
require(quantmod)
yahoo <- getSymbol('YHOO')
yahoo <- getSymbols('YHOO')
getSymbols('YHOO',from = '2020-03-08', to = "2021-03-08",warnings = FALSE, auto.assign = TRUE)
YHOO
getSymbols('YHOO',from = '2020-03-08', to = "2021-03-08",warnings = FALSE, auto.assign = TRUE)
library(forecast)
getSymbols('YHOO',from = '2020-03-08', to = "2021-03-08",warnings = FALSE, auto.assign = TRUE)
getSymbols('yahoo',from = '2020-03-08', to = "2021-03-08",warnings = FALSE, auto.assign = TRUE)
getSymbols('ILMN',from = '2015-03-08', to = "2021-03-08",warnings = FALSE, auto.assign = TRUE)
getSymbols('TSLA',from = '2015-03-08', to = "2021-03-08",warnings = FALSE, auto.assign = TRUE)
TSLA
head(TSLA)
plot(TSLA$TSLA.Close)
plot(ILMN$ILMN.Close)
# C.)
fit_ILMN <- auto.arima(ILMN)
# C.)
fit_ILMN <- auto.arima(ILMN$ILMN.Close)
fit_TSLA <- auto.arima(TSLA$TSLA.Close)
fit_ILMN
fit_TLSA
fit_TSLA
head(TLSA)
head(TSLA)
class(TSLA[1])
TSLA[1]
class(TSLA[,1])
TSLA[,1]
head(TSLA[,1])
class(TSLA)
to.quarterly(TSLA)
nrow(to.quarterly(TSLA))
head(TSLA)
class(TSLA)
TLSA.indexmon()
TLSA.indexmon()
indexmon
.indexmon(TSLA)
TSLA
head(TSLA)
.indexmon(TSLA[1])
.indexmon(TSLA)
nrow(TSLA)
TSLA[.indexmon(TSLA)==2]
TSLA[.indexmon(TSLA)==0]
.indexyear(TSLA)
TSLA[.indexyear(TSLA==115)]
nrow(TSLA)
head(TSLA)
TSLA1 <- TSLA['2015-03/2015-07']
as.Date('2015-03')
as.Date('2015-03-09')
d =as.Date('2015-03-09')
d+60
d+240
d =as.Date('2015-03-09')
d+240
d+120
seq(d,by=120, length=5)
tail(TSLA)
seq(d,by=120, to='2021-03-05')
seq(d,by=120, to=as.Date('2021-03-05'))
seq(d,by=120, to=as.Date('2021-03-05'))[-19]
list.zip(lower,upper)
library(rlist)
list.zip(lower,upper)
lower = seq(d,by=120, to=as.Date('2021-03-05'))[-19]
upper = seq(d,by=120, to=as.Date('2021-03-05'))[-1]
list.zip(lower,upper)
bounds = list.zip(lower,upper)
class(bounds)
class(bounds[[1]])
class(bounds[[1]][[1]])
bounds[[1]][[1]]
class(bounds[[1]]$upper)
make_date_bounds <- function(dates){
upper = dates$upper
lower = dates$lower
paste(upper,lower,sep='/')
}
make_date_bounds(bounds[[1]])
# divide time-series data into 4-month increments
make_date_bounds <- function(dates){
upper = dates$upper
lower = dates$lower
paste(upper,lower,sep='/')
}
lower = seq(d,by=120, to=as.Date('2021-03-05'))[-19]
upper = seq(d,by=120, to=as.Date('2021-03-05'))[-1]
bounds = list.zip(lower,upper)
bounds = lapply(bounds,make_date_bounds)
bounds
bounds[[1]]
TSLA[bounds]
TSLA[bounds[[1]]]
TSLA['2015-03/2015-07']
TSLA[bounds[[1]]]
TSLA[c(bounds[[1]])]
bounds[[1]]
TSLA["2015-07-07/2015-03-09"]
bounds
lower = seq(d,by=120, to=as.Date('2021-03-05'))[-19]
upper = seq(d,by=120, to=as.Date('2021-03-05'))[-1]
bounds = list.zip(lower,upper)
bounds
paste(lower_d,upper_d,sep='/')
# divide time-series data into 4-month increments
make_date_bounds <- function(dates){
upper_d = dates$upper
lower_d = dates$lower
paste(lower_d,upper_d,sep='/')
}
lower = seq(d,by=120, to=as.Date('2021-03-05'))[-19]
upper = seq(d,by=120, to=as.Date('2021-03-05'))[-1]
bounds = list.zip(lower,upper)
bounds = lapply(bounds,make_date_bounds)
bounds[[1]]
bounds
TSLA[bounds[[1]]]
TSLA[bounds[[1]]][1]
TSLA[bounds[[1]]][,4]
head(TSLA[bounds[[1]]][,4])
tesla_models <- lapply(bounds,fit_TSLA)
# divide time-series data into 4-month increments
make_date_bounds <- function(dates){
upper_d = dates$upper
lower_d = dates$lower
paste(lower_d,upper_d,sep='/')
}
lower = seq(d,by=120, to=as.Date('2021-03-05'))[-19]
upper = seq(d,by=120, to=as.Date('2021-03-05'))[-1]
bounds = list.zip(lower,upper)
bounds = lapply(bounds,make_date_bounds)
fit_ARIMA <- function(bound, data){
auto.arima(data[bound][,4])
}
fit_TSLA <- function(bound) fit_ARIMA(bound,TSLA)
fit_ILMN <- function(bound) fit_ARIMA(bound,ILMN)
tesla_models <- lapply(bounds,fit_TSLA)
tesla_models
ilmn_models <- lapply(bounds,fit_ILMN)
ilmn_models
#print ARIMA models
tesla_models
ilmn_models
#print ARIMA models
tesla_models
#print ARIMA models
tesla_models
ilmn_models
# D.)
plot(tesla_models[[2]], n.ahead=12)
# D.)
plot(tesla_models[[2]], n.ahead=12)
best.model
s
# D.)
plot(best.model, n.ahead=12)
# B.)
plot(TSLA$TSLA.Close,n.ahead=12)
# B.)
plot(TSLA$TSLA.Close, n.ahead=500)
# B.)
plot(TSLA$TSLA.Close, n.ahead=500)
# B.)
plot(TSLA$TSLA.Close, n.ahead=500, foobar= 12)
tesla_forcasts = lapply(tesla_models, forcast_12)
# D.)
forcast_12 = function(mod) forcast(mod,12)
tesla_forcasts = lapply(tesla_models, forcast_12)
# D.)
forcast_12 = function(mod) forecast(mod,12)
tesla_forcasts = lapply(tesla_models, forecast_12)
# D.)
forcast_12 = function(mod) forecast(mod,12)
tesla_forcasts = lapply(tesla_models, forecast_12)
# D.)
forecast_12 = function(mod) forecast(mod,12)
tesla_forcasts = lapply(tesla_models, forecast_12)
lapply(tesla_forcasts,plot)
ilmn_forecasts = lapply(ilmn_models,forcast_12)
lapply(ilmn_forecasts,plot)
tesla_full_model = auto.arima(TSLA$TSLA.Close)
ilmn_full_model = auto.arima(ILMN$ILMN.Close)
plot(forecast(tesla_full_model,12))
plot(forecast(ilmn_full_model,12))
library(tidyquant)
library(forecast)
library(rlist)
# A.)
getSymbols('ILMN',from = '2015-03-08', to = "2021-03-08",warnings = FALSE, auto.assign = TRUE)
getSymbols('TSLA',from = '2015-03-08', to = "2021-03-08",warnings = FALSE, auto.assign = TRUE)
# B.)
plot(TSLA$TSLA.Close)
plot(ILMN$ILMN.Close)
#the Tesla stocks seemed stationary from 2015 to 2019, however, beginning
# in late 2019 there seemed to be explosive growth in the stock price, and
# the mean past that point is definitley not constant. Additionally after
# that point there seems to be much more variance in the price, indicating that
# the autocovriance is no longer small as the it appeared to be in the years
# 2015-2019
#The Illumina stock price does not appear stationary in any time-period. The
# mean is most definitley not constant, since we see that the stock prices
# have an upward trend, and there appears to be increasingly positive
# autocorrelation as the time increases.
# C.)
fit_ILMN <- auto.arima(ILMN$ILMN.Close)
fit_TSLA <- auto.arima(TSLA$TSLA.Close)
# divide time-series data into 4-month increments
make_date_bounds <- function(dates){ #helper function
upper_d = dates$upper
lower_d = dates$lower
paste(lower_d,upper_d,sep='/')
}
#make list of data bounds in "lower_date/upper_date" format
lower = seq(d,by=120, to=as.Date('2021-03-05'))[-19]
upper = seq(d,by=120, to=as.Date('2021-03-05'))[-1]
bounds = list.zip(lower,upper)
bounds = lapply(bounds,make_date_bounds)
#fit ARIMA models to 4-month windows
fit_ARIMA <- function(bound, data) auto.arima(data[bound][,4])
fit_TSLA <- function(bound) fit_ARIMA(bound,TSLA)
fit_ILMN <- function(bound) fit_ARIMA(bound,ILMN)
tesla_models <- lapply(bounds,fit_TSLA)
ilmn_models <- lapply(bounds,fit_ILMN)
#print ARIMA models
tesla_models
ilmn_models
# The most common model for TSLA seems to be ARIMA(0,1,0), or a model which
# becomes a random walk after a single difference
# The most common model for ILMN seems to be ARIMA(0,1,0) again, so it seems
# that the simplest ARIMA model tends to happen with highest frequency
# D.)
forecast_12 = function(mod) forecast(mod,12)
tesla_forecasts = lapply(tesla_models, forecast_12)
lapply(tesla_forecasts,plot)
ilmn_forecasts = lapply(ilmn_models,forcast_12)
lapply(ilmn_forecasts,plot)
#forecasting on full data
tesla_full_model = auto.arima(TSLA$TSLA.Close)
ilmn_full_model = auto.arima(ILMN$ILMN.Close)
plot(forecast(tesla_full_model,12))
plot(forecast(ilmn_full_model,12))
library(tidyquant)
library(forecast)
library(rlist)
# A.)
getSymbols('ILMN',from = '2015-03-08', to = "2021-03-08",warnings = FALSE, auto.assign = TRUE)
getSymbols('TSLA',from = '2015-03-08', to = "2021-03-08",warnings = FALSE, auto.assign = TRUE)
# B.)
plot(TSLA$TSLA.Close)
plot(ILMN$ILMN.Close)
#the Tesla stocks seemed stationary from 2015 to 2019, however, beginning
# in late 2019 there seemed to be explosive growth in the stock price, and
# the mean past that point is definitley not constant. Additionally after
# that point there seems to be much more variance in the price, indicating that
# the autocovriance is no longer small as the it appeared to be in the years
# 2015-2019
#The Illumina stock price does not appear stationary in any time-period. The
# mean is most definitley not constant, since we see that the stock prices
# have an upward trend, and there appears to be increasingly positive
# autocorrelation as the time increases.
# C.)
fit_ILMN <- auto.arima(ILMN$ILMN.Close)
fit_TSLA <- auto.arima(TSLA$TSLA.Close)
# divide time-series data into 4-month increments
make_date_bounds <- function(dates){ #helper function
upper_d = dates$upper
lower_d = dates$lower
paste(lower_d,upper_d,sep='/')
}
#make list of data bounds in "lower_date/upper_date" format
lower = seq(d,by=120, to=as.Date('2021-03-05'))[-19]
upper = seq(d,by=120, to=as.Date('2021-03-05'))[-1]
bounds = list.zip(lower,upper)
bounds = lapply(bounds,make_date_bounds)
#fit ARIMA models to 4-month windows
fit_ARIMA <- function(bound, data) auto.arima(data[bound][,4])
fit_TSLA <- function(bound) fit_ARIMA(bound,TSLA)
fit_ILMN <- function(bound) fit_ARIMA(bound,ILMN)
tesla_models <- lapply(bounds,fit_TSLA)
ilmn_models <- lapply(bounds,fit_ILMN)
#print ARIMA models
tesla_models
ilmn_models
# The most common model for TSLA seems to be ARIMA(0,1,0), or a model which
# becomes a random walk after a single difference
# The most common model for ILMN seems to be ARIMA(0,1,0) again, so it seems
# that the simplest ARIMA model tends to happen with highest frequency
# D.)
forecast_12 = function(mod) forecast(mod,12)
tesla_forecasts = lapply(tesla_models, forecast_12)
lapply(tesla_forecasts,plot)
ilmn_forecasts = lapply(ilmn_models,forcast_12)
lapply(ilmn_forecasts,plot)
#forecasting on full data
tesla_full_model = auto.arima(TSLA$TSLA.Close)
ilmn_full_model = auto.arima(ILMN$ILMN.Close)
plot(forecast(tesla_full_model,12))
plot(forecast(ilmn_full_model,12))
